plugins {
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    //implementation 'mysql:mysql-connector-java'  // MySQL Connector/J dependency
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.33'


	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

test {
	useJUnitPlatform()
}

// add beanstalk extensions to the package
/*bootJar {
    from('./.ebextensions') { into '.ebextensions' }
}*/

// remove plain jar, create only the fat jar
jar {
    enabled = false
    // Remove `plain` postfix from jar file name
    archiveClassifier.set("")
}

// Create a distribution ZIP task
task createDistribution(type: Zip) {
    // Define the ZIP file name and destination directory
    archiveFileName = "${project.name}-${project.version}.zip"
    destinationDir = file("$buildDir/distributions")

    // Include the JAR file
    from jar.outputs.files
	//from tasks.named('jar').get().outputs.files


    // Include the .ebextensions folder
    //from file(".ebextensions")
    
	// include dir and all config files  used by beanstalk
	from(".ebextensions") {
		include "*"
		into ".ebextensions"
	}

	//copy(file:".ebextensions", tofile:".ebextensions")
	/*doLast{
		copy {
			from '.'
			into '.'
			include '*'
			include '.ebextensions/**'
		}
	}*/

    // Set permissions for the files in the ZIP (optional)
    /*eachFile {
        // Set permissions for files in .ebextensions folder
        if (it.relativePath.startsWith(".ebextensions")) {
            it.mode = 0755  // Example: Set executable permissions
        }
    }*/
}

// Make the createDistribution task depend on the build task
createDistribution.dependsOn build